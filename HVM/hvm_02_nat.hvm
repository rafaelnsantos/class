// Consider the following definition for natural numbers:
//
// Z:     The number zero
// (S x): The successor of a number x
//
// Ex.: The number 3 would be (S (S (S Z)))
//
// With that definition in mind, do the following exercises:

// PS.: Remember again that, if your function has specific cases,
// you need to write a version of the function for each case:
//
// (Func Z)     -> Will run only for Zero.
// (Func (S n)) -> Will run for every number that is not Zero.
//                 By calling the function in that way, you can use 'n' as variable.
// (Func x)     -> Will run for any number.

// Returns the predecessor of the number
// (Pred x)

// Returns the Double of the number
// (Dobro x)

// Returns the Half of the number and round it down (e.g.:"5/2 = 2") 
// (Metade x)

// Returns the Sum of two numbers
// (Add x y)

// Returns the Subtraction of two numbers (0 if it would be negative)
// (Sub x y)

// Returns the Multiplication two numbers
// (Mul x y)

// Returns the Factorial of the number
// (Fat x)

// For the following 3 exercises, consider the definition of Booleans from the previous file

// Returns if two numbers are equal
// (Equal x y)

// Returns if the first arg is greater than the second
// (Gtn x y)

// Returns if the first arg is lesser than the second
// (Ltn x y)

// SPECIAL BOSS: Returns the division between two numbers, rounded down
// PS.: Returns 0 in case of division by 0
// (Div x y)
