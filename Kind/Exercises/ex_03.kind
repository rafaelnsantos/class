// Basic Exercises involving Nats

type Nat {
  zero
  succ(pred: Nat)
}

// 2 + 1 = 3
// 0 + 1 = 1
inc(a: Nat): Nat  
  Nat.succ(a)  

// Decrement
// 2 - 1 = 1
// 0 - 1 = 0
dec(a: Nat): Nat
  case a {
    zero: Nat.zero
    succ: a.pred
  }

is_zero(a: Nat): Bool
  case a {
    zero: true
  } default false

ex_03: _
  // inc(Nat.zero)
  // dec(Nat.zero)
  is_zero(Nat.succ(2))